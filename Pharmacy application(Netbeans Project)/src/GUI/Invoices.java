/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.Mysql;
import java.awt.Color;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author sun
 */
public class Invoices extends javax.swing.JPanel {

    public void loadInvoices() {

        try {

            ResultSet rs = Mysql.search("SELECT `invoice`.`id`,`invoice`.`date_time`,`invoice_payment`.`amount` FROM `invoice` INNER JOIN `invoice_payment` ON `invoice_payment`.`invoice_id`=`invoice`.`id`");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("date_time"));
                v.add(rs.getString("amount"));
                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadInvoices(String query) {

        try {

            ResultSet rs = Mysql.search("SELECT `invoice`.`id`,`invoice`.`date_time`,`invoice_payment`.`amount` FROM `invoice` INNER JOIN `invoice_payment` ON `invoice_payment`.`invoice_id`=`invoice`.`id` " + query + "");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("date_time"));
                v.add(rs.getString("amount"));
                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * Creates new form Invoices
     */
    public Invoices() {
        initComponents();
        loadInvoices();
        
         jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(new Color(4, 98, 224));
        jTable1.getTableHeader().setForeground(Color.white);
        jTable1.setBackground(Color.WHITE);
        jTable1.setForeground(Color.BLACK);
        jTable1.setSelectionForeground(Color.WHITE);
        jTable1.setSelectionBackground(Color.RED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Issue Date-Time", "Paid Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(4, 98, 224));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("View Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            String invoice_id = jTable1.getValueAt(row, 0).toString();

            try {

                ResultSet rs = Mysql.search("SELECT invoice.date_time,customer.`name` AS `customer_name`,customer.mobile,invoice_payment.amount,payment_method.`name`\n"
                        + "FROM invoice INNER JOIN invoice_item ON invoice_item.invoice_id=invoice.id INNER JOIN invoice_payment\n"
                        + "ON invoice.id=invoice_payment.invoice_id INNER JOIN customer ON customer.id=invoice.customer_id\n"
                        + "INNER JOIN payment_method ON payment_method.id=invoice_payment.payment_method_id WHERE `invoice`.`id`='"+invoice_id+"'");

                rs.next();

                InputStream stream = GRNbasic.class.getResourceAsStream("/reports/Invoice.jrxml");

                JasperReport jr = JasperCompileManager.compileReport(stream);

                Connection dataSource = Mysql.getConnection();

                HashMap parameters = new HashMap();
                parameters.put("invoice_id", invoice_id);
                parameters.put("date", rs.getString("date_time"));
                parameters.put("customer", rs.getString("customer_name"));
                parameters.put("mobile", rs.getString("mobile"));
                parameters.put("payment", rs.getString("name"));
                parameters.put("amount", "Rs "+rs.getString("amount"));

                JasperPrint jp = JasperFillManager.fillReport(jr, parameters, dataSource);

                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
