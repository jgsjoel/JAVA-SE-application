/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.Mysql;
import java.awt.Color;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author sun
 */
public class InvoicesItems extends javax.swing.JPanel {

    Date from_date;
    Date to_date;
    
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    
    public void loadInvoiceItems() {

        try {

            ResultSet rs = Mysql.search("SELECT  invoice.id,invoice_item.stock_id,invoice_item.qty,invoice_item.amount,product.`name`,stock.selling_price\n"
                    + "FROM invoice INNER JOIN invoice_item ON invoice_item.invoice_id=invoice.id INNER JOIN\n"
                    + " stock ON stock.id=invoice_item.stock_id INNER JOIN product ON product.id=stock.product_id");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("stock_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("selling_price"));
                v.add(rs.getString("qty"));
                v.add(rs.getString("amount"));
                dtm.addRow(v);
            }
            
            if(jTable1.getRowCount() != 0){
                jButton1.setEnabled(true);
            }else{
                jButton1.setEnabled(false);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
    public void loadInvoiceItems(String query) {

        try {

            ResultSet rs = Mysql.search("SELECT  `invoice`.`date_time`,invoice.id,invoice_item.stock_id,invoice_item.qty,invoice_item.amount,product.`name`,stock.selling_price\n"
                    + "FROM invoice INNER JOIN invoice_item ON invoice_item.invoice_id=invoice.id INNER JOIN\n"
                    + " stock ON stock.id=invoice_item.stock_id INNER JOIN product ON product.id=stock.product_id "+query+"");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("stock_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("selling_price"));
                v.add(rs.getString("qty"));
                v.add(rs.getString("amount"));
                v.add(rs.getString("date_time"));
                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * Creates new form Invoices
     */
    public InvoicesItems() {
        initComponents();
        loadInvoiceItems();
        
         jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(new Color(4, 98, 224));
        jTable1.getTableHeader().setForeground(Color.white);
        jTable1.setBackground(Color.WHITE);
        jTable1.setForeground(Color.BLACK);
        jTable1.setSelectionForeground(Color.WHITE);
        jTable1.setSelectionBackground(Color.RED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "Stock ID", "Item Name", "Unit Price", "Quantity", "Total Price", "Date-Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setMinWidth(200);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(250);
            jTable1.getColumnModel().getColumn(3).setMinWidth(150);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(4).setMinWidth(110);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(150);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        jButton1.setBackground(new java.awt.Color(4, 98, 224));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Print Report");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {
            
            String date_range;
            if (from_date != null && to_date != null) {
                date_range = sdf.format(from_date) + " TO " + sdf.format(to_date);
            } else if (from_date != null && to_date == null) {
                date_range = "From " + sdf.format(from_date);
            } else if (from_date == null && to_date != null) {
                date_range = "TO " + sdf.format(from_date);
            } else {
                date_range = "N/S";
            }
            
            InputStream stream = GRNbasic.class.getResourceAsStream("/reports/InvoiceItems.jrxml");
            
            JasperReport jr = JasperCompileManager.compileReport(stream);
            
            HashMap parameters = new HashMap();
            parameters.put("date", date_range);
            
            JRTableModelDataSource dataSource = new JRTableModelDataSource((DefaultTableModel)jTable1.getModel());
            
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, dataSource);
            
            JasperViewer.viewReport(jp, false);
            
        } catch (Exception e) {
        e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
